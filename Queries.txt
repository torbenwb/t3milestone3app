[Vendor Data: Fastest selling listings purchased in the last 30 days]
select
    timestampdiff(day, AllClosedListings.date, Purchase.date) as Days_Listed,
    cast(Purchase.date as date) as Purchase_Date,
    concat('$',format (AllClosedListings.price, 'C2')) as List_Price,
    concat('$',format (Purchase.price,'C2')) as Purchase_Price,
    concat('$',format (Purchase.price - AllClosedListings.price, 'C2')) as Price_Differential,
    Vehicle.make, Vehicle.model, Vehicle.year, Vehicle.mileage, Vehicle.engine_type, Vehicle.body_type
from AllClosedListings
    join Purchase on AllClosedListings.listing_num = Purchase.listing_num
    join Vehicle on AllClosedListings.vehicle_num = Vehicle.vehicle_num
where
    Purchase.date > date_sub(curdate(), interval 30 day) and
    Purchase.date < curdate()
order by Days_Listed;

[Vendor Data: Open listings where list price is below average purchase price for make]
select
	concat('$', format(t0.avgPurchasePrice - AllOpenListings.price, 'C2')) as 'Price Differential',
    concat('$', format(AllOpenListings.price,'C2')) as 'List Price',
    concat('$', format(t0.avgPurchasePrice,'C2')) as 'Make Average Purchase Price',
    Vendor.vendor_name as 'Vendor',
    Vehicle.make, Vehicle.model, Vehicle.year, Vehicle.mileage
from AllOpenListings join Vehicle on AllOpenListings.vehicle_num = Vehicle.vehicle_num
join (
	select
		Vehicle.make,
		avg(Purchase.price) as avgPurchasePrice
	from AllClosedListings join Vehicle on AllClosedListings.vehicle_num = Vehicle.vehicle_num
	join Purchase on AllClosedListings.listing_num = Purchase.listing_num group by Vehicle.make
) as t0 on Vehicle.make = t0.make
join (
	select Vehicle.make,
		avg(Vehicle.mileage) as avgMileage
		from Vehicle group by Vehicle.make
) as t1 on Vehicle.make = t1.make
join Vendor on Vehicle.vendor_num = Vendor.vendor_num
where AllOpenListings.price < t0.avgPurchasePrice
and abs(AllOpenListings.price - t0.avgPurchasePrice) < 5000
and Vehicle.mileage <= t1.avgMileage
order by t0.avgPurchasePrice - AllOpenListings.price desc;

[Vendor Data: Customers who have viewed vehicle listings many times but didn't make any purchase]
SELECT DISTINCT
    CONCAT(u.first_name, ' ', u.last_name) AS 'Customer name',
    u.phone AS 'Phone',
    u.email AS 'Email',
    region_name AS Region,
    SUM(v.times_viewed) AS 'Total views',
    COUNT(v.listing_num) AS 'Vehicles viewed',
    MAX(v.last_view) AS 'Last view time'
FROM
    User u
        INNER JOIN
    View v ON u.user_num = v.user_num
        INNER JOIN
    Region r ON r.region_num = u.region_num
        LEFT JOIN
    Purchase p ON v.listing_num = p.listing_num
WHERE
    p.listing_num IS NULL
GROUP BY u.user_num
ORDER BY SUM(v.times_viewed) DESC
LIMIT 30;

[Vendor Data: Average, max and min days for vehicles sold from listing to purchasing]
SELECT
    v.body_type AS 'Vehicle body type',
    ROUND(AVG(Selling_days), 0) AS 'Average selling days',
    MAX(Selling_days) AS 'Maximum selling days',
    MIN(Selling_days) AS 'Minimum selling days'
FROM
    Vehicle v
        INNER JOIN
    Listing l ON v.vehicle_num = l.vehicle_num
        INNER JOIN
    (SELECT
        TIMESTAMPDIFF(DAY, l.date, p.date) AS 'Selling_days',
            l.listing_num
    FROM
        Vehicle v
    INNER JOIN Listing l ON v.vehicle_num = l.vehicle_num
    INNER JOIN Purchase p ON l.listing_num = p.listing_num) sub ON sub.listing_num = l.listing_num
GROUP BY v.body_type
ORDER BY AVG(Selling_days);

[Vendor Data: This query lists the top 10 sales person who have create the most revenue]
SELECT
    CONCAT(u.first_name, ' ', u.last_name) AS 'Sales person',
    ven.vendor_name AS 'Vendor',
    concat('$',format(SUM(p.price),'C2')) AS `Total sales`,
    (COUNT(l.listing_num)) AS 'Total listings',
    ROUND((COUNT(p.purchase_num)) / (COUNT(l.listing_num)) * 100,
            2) AS 'List-sell converting rate %'
FROM
    ((Vehicle v
    INNER JOIN Listing l ON ((v.vehicle_num = l.vehicle_num)))
    INNER JOIN Vendor ven ON ven.vendor_num = v.vendor_num
    INNER JOIN Employee e ON e.employee_num = l.employee_num
    INNER JOIN User u ON u.user_num = e.user_num
    LEFT JOIN Purchase p ON ((l.listing_num = p.listing_num)))
GROUP BY e.user_num , ven.vendor_name
ORDER BY SUM(p.price) DESC
LIMIT 10;

[Vendor Data: Top 10 selling brands along with average selling price]
SELECT
    v.make AS `Brand`,
    COUNT(p.purchase_num) AS `Total sales`,
    concat('$',FORMAT(AVG(p.price), 2)) AS `Average price`
FROM
    Vehicle v
        INNER JOIN
    Listing l ON v.vehicle_num = l.vehicle_num
        INNER JOIN
    Purchase p ON l.listing_num = p.listing_num
GROUP BY v.make
ORDER BY COUNT(p.purchase_num) DESC
LIMIT 10;


[Vendor Data: Most viewed open listings whose last view was in the last 30 days]
select
	agg.Listing_Total_Views as Total_Views,
    cast(t0.mostRecentView as datE) as Most_Recent_View,
    cast(AllOpenListings.date as date) as List_Date,
    timestampdiff(day, AllOpenListings.date, curdate()) as Days_Listed,
    concat('$',format(AllOpenListings.price,'C2')) as List_Price,
    Region.region_name as Region_Name,
    Vendor.vendor_name as Vendor_Name,
    Vehicle.make as Make, Vehicle.model as Model, Vehicle.year as Year, Vehicle.mileage as Mileage
from
	AllOpenListings
join (
	select
		AllOpenListings.listing_num,
		sum(View.times_viewed) as Listing_Total_Views
	from AllOpenListings
		join View on AllOpenListings.listing_num = View.listing_num
	where
		View.last_view > date_sub(curdate(), interval 30 day) and
		View.last_view < curdate()
	group by AllOpenListings.listing_num
	order by Listing_Total_Views desc
) as agg on AllOpenListings.listing_num = agg.listing_num
join Vehicle
	on AllOpenListings.vehicle_num = Vehicle.vehicle_num
join Vendor
	on Vehicle.vendor_num = Vendor.vendor_num
join Region
	on AllOpenListings.region_num = Region.region_num
join (
	select max(View.last_view) as mostRecentView, AllOpenListings.listing_num
	from View join AllOpenListings on View.listing_num = AllOpenListings.listing_num
	group by AllOpenListings.listing_num) as t0
on t0.listing_num = AllOpenListings.listing_num;

[Vendor Action: Display most recent vehicle]
select * from Vehicle
where Vehicle.vendor_num = [Vendor Number]
and Vehicle.vehicle_num =
(select max(Vehicle.vehicle_num) from Vehicle
where Vehicle.vendor_num = [Vendor Number] )
;

[Vendor Action: Insert new vehicle]
insert into Vehicle (vendor_num, make, model, year, engine_type)
values
(
	[Vendor Number],
    [Make],
    [Model],
    [Year],
    [Engine Type]
);

[Vendor Action: Update vehicle details]
update vehicle set
    color = [Color] ,
    body_type = [Body Type] ,
    mileage = [Mileage] ,
    transmission = [Transmission] ,
    drive_type = [Drive Type]
where vehicle.vehicle_num = [Vehicle Num]
;

[Vendor Action: Insert new listing]
insert into Listing (date, vehicle_num, price, region_num, employee_num)
values
(
    curdate(),
    [Vehicle Number],
    [Price],
    [Region],
    (select min(employee.employee_num) from employee join vehicle
        on employee.vendor_num = vehicle.vendor_num
        where vehicle.vehicle_num = [Vehicle Number]
        )
);

[Vendor Action: Display most recent listing]
select * from Listing join Vehicle on Listing.vehicle_num = Vehicle.vehicle_num
where Vehicle.vendor_num = [Vendor Number] and Listing.listing_num =
    (select max(Listing.listing_num) from Listing
    join Vehicle on Listing.vehicle_num = Vehicle.vehicle_num
    where Vehicle.vendor_num = [Vendor Number] )
;

[Customer: Regions with the top 10 purchased models]
select
	v.make as 'Brand',
    v.model as 'Model',
    r.region_name as 'Region',
    count(p.purchase_num) as 'Total Sales',
	format(avg(p.price), 2) as 'Average Price'
from Region r left join Listing l on r.region_num = l.region_num
join Vehicle v on l.vehicle_num = v.vehicle_num
join Purchase p on l.listing_num = p.listing_num
group by v.make, v.model, r.region_num
order by count(p.purchase_num) desc
limit 10;

[Customer: Search by Rating, Make, Price, Mileage]
select
	t0.vendor_name,
    t0.AvgRating as 'Vendor Rating',
	AllOpenListings.price,
    Vehicle.make, Vehicle.model, Vehicle.body_type, Vehicle.year, Vehicle.color, Vehicle.engine_type, Vehicle.mileage
from AllOpenListings join Vehicle on AllOpenListings.vehicle_num = Vehicle.vehicle_num
join (
	select Vendor.vendor_num, Vendor.vendor_name, avg(Purchase.user_rating) as AvgRating
	from Purchase join Listing on Purchase.listing_num = Listing.listing_num
	join Vehicle on Vehicle.vehicle_num = Listing.vehicle_num
	join Vendor on Vendor.vendor_num = Vehicle.vendor_num
group by Vendor.vendor_num) as t0 on Vehicle.vendor_num = t0.vendor_num
where
	t0.avgRating >= [minVendorRating] and
	Vehicle.make = [vehicleMake] and
	Vehicle.mileage <= [maxMileage] and
	AllOpenListings.price <= [maxPrice]
;

[Customer: Search by Make, Price, Region]
select
	t0.vendor_name,
    t0.AvgRating as 'Vendor Rating',
	AllOpenListings.price,
    Vehicle.make, Vehicle.model, Vehicle.body_type, Vehicle.year, Vehicle.color, Vehicle.engine_type, Vehicle.mileage
from AllOpenListings join Vehicle on AllOpenListings.vehicle_num = Vehicle.vehicle_num
join (
	select Vendor.vendor_num, Vendor.vendor_name, avg(Purchase.user_rating) as AvgRating
	from Purchase join Listing on Purchase.listing_num = Listing.listing_num
	join Vehicle on Vehicle.vehicle_num = Listing.vehicle_num
	join Vendor on Vendor.vendor_num = Vehicle.vendor_num
group by Vendor.vendor_num) as t0 on Vehicle.vendor_num = t0.vendor_num
where
	Vehicle.make = [Vehicle Make] and
	AllOpenListings.price <= [Max Price] and
	AllOpenListings.price >= [Min Price] and
	AllOpenListings.region_num = [Region Num]
;

[Customer: Get price trend last over last year]
select t0.Month as 'Month', t0.AvgListPrice as 'Monthly Average List Price' from (
	select
		month(Listing.date) as 'Month',
		avg(Listing.price) as AvgListPrice
	from
		Listing join Vehicle on Listing.vehicle_num = Vehicle.vehicle_num
	where
		Listing.date >= date_sub(curdate(), interval 1 year) and
		Listing.date <= curdate() and
        Listing.price <= [priceMax] and
        Vehicle.mileage <= [mileageMax] and
        Vehicle.year >= [minYear] and
        Vehicle.body_type = [bodyType]
	group by month(Listing.date)
	order by month(Listing.date) asc) as t0;

[Customer: Search Make]
select
concat('$',format (AllOpenListings.price, 'C2')),
Vendor.vendor_name,
Vehicle.make, Vehicle.model, Vehicle.mileage, Vehicle.color, Vehicle.engine_type
from AllOpenListings join Vehicle on Vehicle.vehicle_num = AllOpenListings.vehicle_num
join Vendor on Vehicle.vendor_num = Vendor.vendor_num
where Vehicle.make = [Vehicle Make]
;

[Customer: Search Make, Region]
select
concat('$',format (AllOpenListings.price, 'C2')),
Vendor.vendor_name,
Vehicle.make, Vehicle.model, Vehicle.mileage, Vehicle.color, Vehicle.engine_type
from AllOpenListings join Vehicle on Vehicle.vehicle_num = AllOpenListings.vehicle_num
join Vendor on Vehicle.vendor_num = Vendor.vendor_num
where Vehicle.make = [Vehicle Make]
and AllOpenListings.region_num = [Region]
;
